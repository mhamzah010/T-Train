-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2020-10-24 23:28:58 WIB
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE account (
    account_id  VARCHAR2(10 CHAR) NOT NULL,
    name        VARCHAR2(50 CHAR) NOT NULL,
    email       VARCHAR2(20 CHAR) NOT NULL,
    password    VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE account ADD CONSTRAINT account_pk PRIMARY KEY ( account_id );

CREATE TABLE admin (
    admin_id    VARCHAR2(10 CHAR) NOT NULL,
    admin_name  VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE admin ADD CONSTRAINT admin_pk PRIMARY KEY ( admin_id );

CREATE TABLE application (
    account_account_id  VARCHAR2(10 CHAR) NOT NULL,
    application_id      NUMBER NOT NULL
);

CREATE UNIQUE INDEX application__idx ON
    application (
        account_account_id
    ASC );

ALTER TABLE application ADD CONSTRAINT application_pk PRIMARY KEY ( application_id );

CREATE TABLE bank_transfer (
    bank_id         VARCHAR2(10 CHAR) NOT NULL,
    bank_name       VARCHAR2(10 CHAR) NOT NULL,
    account_number  VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE bank_transfer ADD CONSTRAINT bank_transfer_pk PRIMARY KEY ( bank_id );

CREATE TABLE booking_sys (
    station_station_id  VARCHAR2(10 CHAR) NOT NULL,
    booking_sys_id      NUMBER NOT NULL
);

ALTER TABLE booking_sys ADD CONSTRAINT booking_sys_pk PRIMARY KEY ( booking_sys_id );

CREATE TABLE cash (
    given_cash          INTEGER NOT NULL,
    change              INTEGER NOT NULL,
    admin_admin_id      VARCHAR2(10 CHAR) NOT NULL,
    counter_counter_id  VARCHAR2(10 CHAR) NOT NULL,
    cash_id             NUMBER NOT NULL
);

ALTER TABLE cash ADD CONSTRAINT cash_pk PRIMARY KEY ( cash_id );

CREATE TABLE check_in (
    id_ticket_status  VARCHAR2(10 CHAR) NOT NULL,
    datetime          DATE NOT NULL
);

ALTER TABLE check_in ADD CONSTRAINT check_in_pk PRIMARY KEY ( id_ticket_status );

CREATE TABLE class (
    class_id    VARCHAR2(10 CHAR) NOT NULL,
    class_type  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE class ADD CONSTRAINT class_pk PRIMARY KEY ( class_id );

CREATE TABLE counter (
    counter_id          NUMBER NOT NULL,
    schedule_admin      DATE NOT NULL,
    station_station_id  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE counter ADD CONSTRAINT counter_pk PRIMARY KEY ( counter_id );

CREATE TABLE customer (
    id_customer                 NUMBER NOT NULL,
    identity_number             VARCHAR2(10 CHAR) NOT NULL,
    identity_category           VARCHAR2(10 CHAR) NOT NULL,
    name                        VARCHAR2(50 CHAR) NOT NULL,
    type_of_customer            VARCHAR2(10 CHAR) NOT NULL,
    phone_number                VARCHAR2(20 CHAR) NOT NULL,
    total_customer              INTEGER NOT NULL,
    reservation_reservation_id  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( id_customer );

CREATE TABLE discount (
    id_discount       VARCHAR2(10 CHAR) NOT NULL,
    discount_percent  FLOAT(6) NOT NULL,
    quota             INTEGER NOT NULL,
    "date"            DATE NOT NULL
);

ALTER TABLE discount ADD CONSTRAINT discount_pk PRIMARY KEY ( id_discount );

CREATE TABLE interlocal (
    route_id             VARCHAR2(10 CHAR) NOT NULL,
    interlocal_province  VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE interlocal ADD CONSTRAINT interlocal_pk PRIMARY KEY ( route_id );

CREATE TABLE invoice (
    id_invoice                  NUMBER NOT NULL,
    date_created                DATE NOT NULL,
    total_payment               INTEGER NOT NULL,
    status                      VARCHAR2(20) NOT NULL,
    reservation_reservation_id  VARCHAR2(10 CHAR) NOT NULL
);

CREATE UNIQUE INDEX invoice__idx ON
    invoice (
        reservation_reservation_id
    ASC );

ALTER TABLE invoice ADD CONSTRAINT invoice_pk PRIMARY KEY ( id_invoice );

CREATE TABLE local (
    route_id  VARCHAR2(10 CHAR) NOT NULL,
    city      VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE local ADD CONSTRAINT local_pk PRIMARY KEY ( route_id );

CREATE TABLE passenger (
    identity_number   VARCHAR2(20 CHAR) NOT NULL,
    name              VARCHAR2(50 CHAR) NOT NULL,
    type              VARCHAR2(10 CHAR) NOT NULL,
    ticket_ticket_id  VARCHAR2(10 CHAR) NULL
);

CREATE UNIQUE INDEX passenger__idx ON
    passenger (
        ticket_ticket_id
    ASC );

ALTER TABLE passenger ADD CONSTRAINT passenger_pk PRIMARY KEY ( identity_number );

CREATE TABLE payment (
    payment_id             NUMBER NOT NULL,
    payment_time           DATE NOT NULL,
    invoice_id_invoice     VARCHAR2(10 CHAR) NOT NULL,
    bank_transfer_bank_id  VARCHAR2(10 CHAR),
    cash_cash_id           NUMBER
);

ALTER TABLE payment
    ADD CONSTRAINT arc_3 CHECK ( ( ( cash_cash_id IS NOT NULL )
                                   AND ( bank_transfer_bank_id IS NULL ) )
                                 OR ( ( bank_transfer_bank_id IS NOT NULL )
                                      AND ( cash_cash_id IS NULL ) ) );

CREATE UNIQUE INDEX payment__idx ON
    payment (
        invoice_id_invoice
    ASC );

ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( payment_id );

CREATE TABLE refund (
    id_ticket_status       VARCHAR2(10 CHAR) NOT NULL,
    name                   VARCHAR2(50 CHAR) NOT NULL,
    total_ticket           INTEGER NOT NULL,
    price_of_ticket        INTEGER NOT NULL,
    total_refund           INTEGER NOT NULL,
    charge                 FLOAT(6) NOT NULL,
    bank_transfer_bank_id  VARCHAR2(10 CHAR) NOT NULL,
    counter_counter_id     VARCHAR2(10 CHAR) NOT NULL
);

CREATE UNIQUE INDEX refund__idx ON
    refund (
        bank_transfer_bank_id
    ASC );

CREATE UNIQUE INDEX refund__idxv1 ON
    refund (
        counter_counter_id
    ASC );

ALTER TABLE refund ADD CONSTRAINT refund_pk PRIMARY KEY ( id_ticket_status );

CREATE TABLE reschedule (
    id_ticket_status            VARCHAR2(10 CHAR) NOT NULL,
    price_of_ticket             INTEGER NOT NULL,
    charge                      FLOAT(6) NOT NULL,
    reservation_reservation_id  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE reschedule ADD CONSTRAINT reschedule_pk PRIMARY KEY ( id_ticket_status );

CREATE TABLE reservation (
    reservation_id              NUMBER NOT NULL,
    date_created                DATE NOT NULL,
    schedule_shedule_id         VARCHAR2(10 CHAR) NOT NULL,
    invoice_id_invoice          VARCHAR2(10 CHAR),
    booking_sys_booking_sys_id  NUMBER,
    application_application_id  NUMBER
);

ALTER TABLE reservation
    ADD CONSTRAINT arc_2 CHECK ( ( ( booking_sys_booking_sys_id IS NOT NULL )
                                   AND ( application_application_id IS NULL ) )
                                 OR ( ( application_application_id IS NOT NULL )
                                      AND ( booking_sys_booking_sys_id IS NULL ) ) );

CREATE UNIQUE INDEX reservation__idx ON
    reservation (
        invoice_id_invoice
    ASC );

ALTER TABLE reservation ADD CONSTRAINT reservation_pk PRIMARY KEY ( reservation_id );

CREATE TABLE route (
    route_id             VARCHAR2(10 CHAR) NOT NULL,
    origin_station       VARCHAR2(20 CHAR) NOT NULL,
    destination_station  VARCHAR2(20 CHAR) NOT NULL,
    schedule_shedule_id  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE route ADD CONSTRAINT route_pk PRIMARY KEY ( route_id );

CREATE TABLE schedule (
    shedule_id            VARCHAR2(10 CHAR) NOT NULL,
    departure_schedule    DATE NOT NULL,
    arrival_schedule      DATE NOT NULL,
    actual_schedule       DATE NOT NULL,
    ticket_price          INTEGER NOT NULL,
    date_schedule         DATE NOT NULL,
    discount_id_discount  VARCHAR2(10 CHAR)
);

ALTER TABLE schedule ADD CONSTRAINT schedule_pk PRIMARY KEY ( shedule_id );

CREATE TABLE seat (
    seat_id         VARCHAR2(10 CHAR) NOT NULL,
    wagon_wagon_id  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE seat ADD CONSTRAINT seat_pk PRIMARY KEY ( seat_id );

CREATE TABLE station (
    station_id    VARCHAR2(10 CHAR) NOT NULL,
    station_name  VARCHAR2(10 CHAR) NOT NULL,
    location      VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE station ADD CONSTRAINT station_pk PRIMARY KEY ( station_id );

CREATE TABLE ticket (
    ticket_id                       VARCHAR2(10 CHAR) NOT NULL,
    date_created                    DATE NOT NULL,
    status                          INTEGER NOT NULL,
    invoice_id_invoice              NUMBER NOT NULL,
    passenger_identity_number       VARCHAR2(10 CHAR) NOT NULL,
    ticket_status_id_ticket_status  VARCHAR2(10 CHAR) NOT NULL
);

CREATE UNIQUE INDEX ticket__idx ON
    ticket (
        passenger_identity_number
    ASC );

ALTER TABLE ticket ADD CONSTRAINT ticket_pk PRIMARY KEY ( ticket_id );

CREATE TABLE ticket_status (
    id_ticket_status VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE ticket_status ADD CONSTRAINT ticket_status_pk PRIMARY KEY ( id_ticket_status );

CREATE TABLE train (
    train_id             VARCHAR2(10 CHAR) NOT NULL,
    train_name           VARCHAR2(20 CHAR) NOT NULL,
    schedule_shedule_id  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE train ADD CONSTRAINT train_pk PRIMARY KEY ( train_id );

CREATE TABLE wagon (
    wagon_id        VARCHAR2(10 CHAR) NOT NULL,
    total_seat      INTEGER NOT NULL,
    train_train_id  VARCHAR2(10 CHAR) NOT NULL,
    class_class_id  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE wagon ADD CONSTRAINT wagon_pk PRIMARY KEY ( wagon_id );

ALTER TABLE application
    ADD CONSTRAINT application_account_fk FOREIGN KEY ( account_account_id )
        REFERENCES account ( account_id );

ALTER TABLE booking_sys
    ADD CONSTRAINT booking_sys_station_fk FOREIGN KEY ( station_station_id )
        REFERENCES station ( station_id );

ALTER TABLE cash
    ADD CONSTRAINT cash_admin_fk FOREIGN KEY ( admin_admin_id )
        REFERENCES admin ( admin_id );

ALTER TABLE cash
    ADD CONSTRAINT cash_counter_fk FOREIGN KEY ( counter_counter_id )
        REFERENCES counter ( counter_id );

ALTER TABLE check_in
    ADD CONSTRAINT check_in_ticket_status_fk FOREIGN KEY ( id_ticket_status )
        REFERENCES ticket_status ( id_ticket_status );

ALTER TABLE counter
    ADD CONSTRAINT counter_station_fk FOREIGN KEY ( station_station_id )
        REFERENCES station ( station_id );

ALTER TABLE customer
    ADD CONSTRAINT customer_reservation_fk FOREIGN KEY ( reservation_reservation_id )
        REFERENCES reservation ( reservation_id );

ALTER TABLE interlocal
    ADD CONSTRAINT interlocal_route_fk FOREIGN KEY ( route_id )
        REFERENCES route ( route_id );

ALTER TABLE invoice
    ADD CONSTRAINT invoice_reservation_fk FOREIGN KEY ( reservation_reservation_id )
        REFERENCES reservation ( reservation_id );

ALTER TABLE local
    ADD CONSTRAINT local_route_fk FOREIGN KEY ( route_id )
        REFERENCES route ( route_id );

ALTER TABLE passenger
    ADD CONSTRAINT passenger_ticket_fk FOREIGN KEY ( ticket_ticket_id )
        REFERENCES ticket ( ticket_id );

ALTER TABLE payment
    ADD CONSTRAINT payment_bank_transfer_fk FOREIGN KEY ( bank_transfer_bank_id )
        REFERENCES bank_transfer ( bank_id );

ALTER TABLE payment
    ADD CONSTRAINT payment_cash_fk FOREIGN KEY ( cash_cash_id )
        REFERENCES cash ( cash_id );

ALTER TABLE payment
    ADD CONSTRAINT payment_invoice_fk FOREIGN KEY ( invoice_id_invoice )
        REFERENCES invoice ( id_invoice );

ALTER TABLE refund
    ADD CONSTRAINT refund_bank_transfer_fk FOREIGN KEY ( bank_transfer_bank_id )
        REFERENCES bank_transfer ( bank_id );

ALTER TABLE refund
    ADD CONSTRAINT refund_counter_fk FOREIGN KEY ( counter_counter_id )
        REFERENCES counter ( counter_id );

ALTER TABLE refund
    ADD CONSTRAINT refund_ticket_status_fk FOREIGN KEY ( id_ticket_status )
        REFERENCES ticket_status ( id_ticket_status );

ALTER TABLE reschedule
    ADD CONSTRAINT reschedule_reservation_fk FOREIGN KEY ( reservation_reservation_id )
        REFERENCES reservation ( reservation_id );

ALTER TABLE reschedule
    ADD CONSTRAINT reschedule_ticket_status_fk FOREIGN KEY ( id_ticket_status )
        REFERENCES ticket_status ( id_ticket_status );

ALTER TABLE reservation
    ADD CONSTRAINT reservation_application_fk FOREIGN KEY ( application_application_id )
        REFERENCES application ( application_id );

ALTER TABLE reservation
    ADD CONSTRAINT reservation_booking_sys_fk FOREIGN KEY ( booking_sys_booking_sys_id )
        REFERENCES booking_sys ( booking_sys_id );

ALTER TABLE reservation
    ADD CONSTRAINT reservation_invoice_fk FOREIGN KEY ( invoice_id_invoice )
        REFERENCES invoice ( id_invoice );

ALTER TABLE reservation
    ADD CONSTRAINT reservation_schedule_fk FOREIGN KEY ( schedule_shedule_id )
        REFERENCES schedule ( shedule_id );

ALTER TABLE route
    ADD CONSTRAINT route_schedule_fk FOREIGN KEY ( schedule_shedule_id )
        REFERENCES schedule ( shedule_id );

ALTER TABLE schedule
    ADD CONSTRAINT schedule_discount_fk FOREIGN KEY ( discount_id_discount )
        REFERENCES discount ( id_discount );

ALTER TABLE seat
    ADD CONSTRAINT seat_wagon_fk FOREIGN KEY ( wagon_wagon_id )
        REFERENCES wagon ( wagon_id );

ALTER TABLE ticket
    ADD CONSTRAINT ticket_invoice_fk FOREIGN KEY ( invoice_id_invoice )
        REFERENCES invoice ( id_invoice );

ALTER TABLE ticket
    ADD CONSTRAINT ticket_passenger_fk FOREIGN KEY ( passenger_identity_number )
        REFERENCES passenger ( identity_number );

ALTER TABLE ticket
    ADD CONSTRAINT ticket_ticket_status_fk FOREIGN KEY ( ticket_status_id_ticket_status )
        REFERENCES ticket_status ( id_ticket_status );

ALTER TABLE train
    ADD CONSTRAINT train_schedule_fk FOREIGN KEY ( schedule_shedule_id )
        REFERENCES schedule ( shedule_id );

ALTER TABLE wagon
    ADD CONSTRAINT wagon_class_fk FOREIGN KEY ( class_class_id )
        REFERENCES class ( class_id );

ALTER TABLE wagon
    ADD CONSTRAINT wagon_train_fk FOREIGN KEY ( train_train_id )
        REFERENCES train ( train_id );

CREATE OR REPLACE TRIGGER fkntm_ticket BEFORE
    UPDATE OF invoice_id_invoice, passenger_identity_number ON ticket
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table TICKET is violated');
END;
/

--  ERROR: No Discriminator Column found in Arc FKArc_1 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_1 - constraint trigger for Arc cannot be generated

--  ERROR: No Discriminator Column found in Arc FKArc_2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2 - constraint trigger for Arc cannot be generated 

--  ERROR: No Discriminator Column found in Arc FKArc_2 - constraint trigger for Arc cannot be generated

CREATE SEQUENCE application_application_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER application_application_id_trg BEFORE
    INSERT ON application
    FOR EACH ROW
    WHEN ( new.application_id IS NULL )
BEGIN
    :new.application_id := application_application_id_seq.nextval;
END;
/

CREATE SEQUENCE booking_sys_booking_sys_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER booking_sys_booking_sys_id_trg BEFORE
    INSERT ON booking_sys
    FOR EACH ROW
    WHEN ( new.booking_sys_id IS NULL )
BEGIN
    :new.booking_sys_id := booking_sys_booking_sys_id_seq.nextval;
END;
/

CREATE SEQUENCE cash_cash_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cash_cash_id_trg BEFORE
    INSERT ON cash
    FOR EACH ROW
    WHEN ( new.cash_id IS NULL )
BEGIN
    :new.cash_id := cash_cash_id_seq.nextval;
END;
/

CREATE SEQUENCE reservation_reservation_id_seq START WITH 1 NOCACHE ORDER;
CREATE OR REPLACE TRIGGER reservation_reservation_id_trg BEFORE
    INSERT ON reservation
    FOR EACH ROW
    WHEN ( new.reservation_id IS NULL )
BEGIN
    :new.reservation_id := reservation_reservation_id_seq.nextval;
END;
/

CREATE SEQUENCE invoice_id_invoice_seq START WITH 1 NOCACHE ORDER;
CREATE OR REPLACE TRIGGER invoice_id_invoice_trg BEFORE
    INSERT ON invoice
    FOR EACH ROW
    WHEN ( new.id_invoice IS NULL )
BEGIN
    :new.id_invoice := invoice_id_invoice_seq.nextval;
END;
/


CREATE SEQUENCE customer_id_customer_seq START WITH 1 NOCACHE ORDER;
CREATE OR REPLACE TRIGGER customer_id_customer_trg BEFORE
    INSERT ON customer
    FOR EACH ROW
    WHEN ( new.id_customer IS NULL )
BEGIN
    :new.id_customer := customer_id_customer_seq.nextval;
END;
/


INSERT INTO booking_sys VALUES ('ST_01','1');

INSERT INTO account VALUES ('AC_01','Hamzah','Hamzah@gmail.com','hmz123');

INSERT INTO customer VALUES ('1','32160','KTP','Hamzah','Adult', '085156170762', '1','1');

INSERT INTO schedule VALUES ('sc_1','29-OCT-2020','30-OCT-2020','29-OCT-2020','400000', '29-OCT-2020','');

INSERT INTO train VALUES ('001','kertajaya','sc_1');

INSERT INTO class VALUEs ('cl_1','Eksekutif');

INSERT INTO wagon VALUES ('wag_1','50','001','cl_1');

INSERT INTO seat VALUES ('A1','wag_1');

INSERT INTO admin VALUES ('1','Broto');

INSERT INTO station VALUES ('ST_01','Manggarai','Jakarta');

INSERT INTO counter VALUES ('CTR_01',SYSDATE,'ST_01');

INSERT INTO cash VALUES (400000,0,'1','CTR_01',1);

INSERT INTO reservation VALUES ('1','25-OCT-2020','sc_1','','01','');

INSERT INTO invoice VALUES ('1','25-OCT-2020','400000','1','res_1');

INSERT INTO passenger VALUES ('321607','Hamzah','Adult','');

INSERT INTO ticket_status VALUES ('1');

INSERT INTO ticket VALUES ('01','25-OCT-2020','1','1','321607','1');

INSERT INTO bank_transfer VALUES ('B_01','BCA','333221');

INSERT INTO payment VALUES ('PAY_01','25-OCT-2020','inv_01','B_01','');

CREATE SYNONYM H_res 
FOR ID_A932_PLSQL_S08.RESERVATION;

CREATE SYNONYM H_acc
 FOR ID_A932_PLSQL_S08.account;

-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            27
-- CREATE INDEX                             8
-- ALTER TABLE                             61
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          3
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   5
-- WARNINGS                                 0
